{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amalr\\\\Desktop\\\\Project\\\\student-trk\\\\frontend\\\\src\\\\pages\\\\CGPA.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Form, InputNumber, Button, Table } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CGPA() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [cgpa, setCGPA] = useState(0);\n  useEffect(() => {\n    axios.get('/api/courses').then(res => setCourses(res.data));\n  }, []);\n  useEffect(() => {\n    if (courses.length === 0) setCGPA(0);else {\n      let totalCredits = 0,\n        totalPoints = 0;\n      courses.forEach(course => {\n        totalCredits += course.credits;\n        totalPoints += course.credits * course.gradePoints;\n      });\n      setCGPA((totalPoints / totalCredits).toFixed(2));\n    }\n  }, [courses]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Current CGPA\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: [{\n        title: 'Course Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Credits',\n        dataIndex: 'credits',\n        key: 'credits'\n      }, {\n        title: 'Grade Points',\n        dataIndex: 'gradePoints',\n        key: 'gradePoints'\n      }],\n      dataSource: courses,\n      pagination: false,\n      rowKey: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24,\n        fontSize: 18\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"CGPA: \", cgpa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CGPA, \"OuxUUoAhkJ7ROjkCj4paH7kZ7zE=\");\n_c = CGPA;\nvar _c;\n$RefreshReg$(_c, \"CGPA\");","map":{"version":3,"names":["React","useEffect","useState","Card","Form","InputNumber","Button","Table","axios","jsxDEV","_jsxDEV","CGPA","_s","courses","setCourses","cgpa","setCGPA","get","then","res","data","length","totalCredits","totalPoints","forEach","course","credits","gradePoints","toFixed","title","children","columns","dataIndex","key","dataSource","pagination","rowKey","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/amalr/Desktop/Project/student-trk/frontend/src/pages/CGPA.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Form, InputNumber, Button, Table } from 'antd';\r\nimport axios from 'axios';\r\n\r\nexport default function CGPA() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [cgpa, setCGPA] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/courses').then(res => setCourses(res.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (courses.length === 0) setCGPA(0);\r\n    else {\r\n      let totalCredits = 0, totalPoints = 0;\r\n      courses.forEach(course => {\r\n        totalCredits += course.credits;\r\n        totalPoints += course.credits * course.gradePoints;\r\n      });\r\n      setCGPA((totalPoints / totalCredits).toFixed(2));\r\n    }\r\n  }, [courses]);\r\n\r\n  return (\r\n    <Card title=\"Current CGPA\">\r\n      <Table\r\n        columns={[\r\n          { title: 'Course Name', dataIndex: 'name', key: 'name' },\r\n          { title: 'Credits', dataIndex: 'credits', key: 'credits' },\r\n          { title: 'Grade Points', dataIndex: 'gradePoints', key: 'gradePoints' },\r\n        ]}\r\n        dataSource={courses}\r\n        pagination={false}\r\n        rowKey=\"id\"\r\n      />\r\n      <div style={{ marginTop: 24, fontSize: 18 }}>\r\n        <b>CGPA: {cgpa}</b>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC7D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdO,KAAK,CAACS,GAAG,CAAC,cAAc,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIL,UAAU,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,IAAIY,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAEL,OAAO,CAAC,CAAC,CAAC,CAAC,KAChC;MACH,IAAIM,YAAY,GAAG,CAAC;QAAEC,WAAW,GAAG,CAAC;MACrCV,OAAO,CAACW,OAAO,CAACC,MAAM,IAAI;QACxBH,YAAY,IAAIG,MAAM,CAACC,OAAO;QAC9BH,WAAW,IAAIE,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACE,WAAW;MACpD,CAAC,CAAC;MACFX,OAAO,CAAC,CAACO,WAAW,GAAGD,YAAY,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD;EACF,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA,CAACP,IAAI;IAAC0B,KAAK,EAAC,cAAc;IAAAC,QAAA,gBACxBpB,OAAA,CAACH,KAAK;MACJwB,OAAO,EAAE,CACP;QAAEF,KAAK,EAAE,aAAa;QAAEG,SAAS,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC,EACxD;QAAEJ,KAAK,EAAE,SAAS;QAAEG,SAAS,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAC1D;QAAEJ,KAAK,EAAE,cAAc;QAAEG,SAAS,EAAE,aAAa;QAAEC,GAAG,EAAE;MAAc,CAAC,CACvE;MACFC,UAAU,EAAErB,OAAQ;MACpBsB,UAAU,EAAE,KAAM;MAClBC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACF9B,OAAA;MAAK+B,KAAK,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAb,QAAA,eAC1CpB,OAAA;QAAAoB,QAAA,GAAG,QAAM,EAACf,IAAI;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAC5B,EAAA,CArCuBD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
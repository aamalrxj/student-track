{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amalr\\\\Desktop\\\\Project\\\\student-trk\\\\frontend\\\\src\\\\pages\\\\Assignments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, Tag, Select } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default function Assignments() {\n  _s();\n  const [data, setData] = useState([]);\n  const [courseFilter, setCourseFilter] = useState(null);\n  const [assignmentFilter, setAssignmentFilter] = useState(null);\n  useEffect(() => {\n    axios.get('/api/assignments').then(res => setData(res.data));\n  }, []);\n\n  // Filtered data\n  let filtered = data;\n  if (courseFilter) filtered = filtered.filter(d => d.courseId === courseFilter);\n  if (assignmentFilter) filtered = filtered.filter(d => d.id === assignmentFilter);\n\n  // To populate filters\n  const courseIds = [...new Set(data.map(d => d.courseId))];\n  const assignmentIds = [...new Set(data.map(d => d.id))];\n  const columns = [{\n    title: 'Assignment Id',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Course Id',\n    dataIndex: 'courseId',\n    key: 'courseId'\n  }, {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => /*#__PURE__*/_jsxDEV(Tag, {\n      color: status === 'Completed' ? 'green' : 'orange',\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: 'Due Date',\n    dataIndex: 'dueDate',\n    key: 'dueDate'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        allowClear: true,\n        placeholder: \"Filter by Course Id\",\n        style: {\n          width: 150,\n          marginRight: 8\n        },\n        onChange: v => setCourseFilter(v),\n        children: courseIds.map(id => /*#__PURE__*/_jsxDEV(Option, {\n          value: id,\n          children: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        allowClear: true,\n        placeholder: \"Filter by Assignment Id\",\n        style: {\n          width: 150\n        },\n        onChange: v => setAssignmentFilter(v),\n        children: assignmentIds.map(id => /*#__PURE__*/_jsxDEV(Option, {\n          value: id,\n          children: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: filtered,\n      rowKey: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Assignments, \"pm+8DP6TOZitLQW/PpxMG4wWp9s=\");\n_c = Assignments;\nvar _c;\n$RefreshReg$(_c, \"Assignments\");","map":{"version":3,"names":["React","useEffect","useState","Table","Tag","Select","axios","jsxDEV","_jsxDEV","Option","Assignments","_s","data","setData","courseFilter","setCourseFilter","assignmentFilter","setAssignmentFilter","get","then","res","filtered","filter","d","courseId","id","courseIds","Set","map","assignmentIds","columns","title","dataIndex","key","render","status","color","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","allowClear","placeholder","width","marginRight","onChange","v","value","dataSource","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/amalr/Desktop/Project/student-trk/frontend/src/pages/Assignments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Tag, Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Assignments() {\r\n  const [data, setData] = useState([]);\r\n  const [courseFilter, setCourseFilter] = useState(null);\r\n  const [assignmentFilter, setAssignmentFilter] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/assignments').then(res => setData(res.data));\r\n  }, []);\r\n\r\n  // Filtered data\r\n  let filtered = data;\r\n  if (courseFilter) filtered = filtered.filter(d => d.courseId === courseFilter);\r\n  if (assignmentFilter) filtered = filtered.filter(d => d.id === assignmentFilter);\r\n\r\n  // To populate filters\r\n  const courseIds = [...new Set(data.map(d => d.courseId))];\r\n  const assignmentIds = [...new Set(data.map(d => d.id))];\r\n\r\n  const columns = [\r\n    { title: 'Assignment Id', dataIndex: 'id', key: 'id' },\r\n    { title: 'Course Id', dataIndex: 'courseId', key: 'courseId' },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    { title: 'Status', dataIndex: 'status', key: 'status', \r\n      render: status => <Tag color={status === 'Completed' ? 'green' : 'orange'}>{status}</Tag> },\r\n    { title: 'Due Date', dataIndex: 'dueDate', key: 'dueDate' },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Assignments</h2>\r\n      <div style={{ marginBottom: 16 }}>\r\n        <Select\r\n          allowClear\r\n          placeholder=\"Filter by Course Id\"\r\n          style={{ width: 150, marginRight: 8 }}\r\n          onChange={v => setCourseFilter(v)}\r\n        >\r\n          {courseIds.map(id => <Option value={id} key={id}>{id}</Option>)}\r\n        </Select>\r\n        <Select\r\n          allowClear\r\n          placeholder=\"Filter by Assignment Id\"\r\n          style={{ width: 150 }}\r\n          onChange={v => setAssignmentFilter(v)}\r\n        >\r\n          {assignmentIds.map(id => <Option value={id} key={id}>{id}</Option>)}\r\n        </Select>\r\n      </div>\r\n      <Table columns={columns} dataSource={filtered} rowKey=\"id\" />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}